---
title: "Session2"
format: html
editor: visual
---

## Connecting to a database

What you need:

1.  **The right software: Database Driver and R Package**: You need the appropriate R package that acts as an interface to the database driver. Databases have specific drivers, software that bridges between R and the database.

2.  **Connection Credentials**: This includes the host address of the database server, the port number, the specific database name you want to connect to, and the user credentials (username and password). These details are crucial for R to correctly locate and gain authorized access to the database.

3.  **Connection String/Code**: This is a concise expression or a block of code in R that brings together the driver/package and the connection credentials to establish the connection. It typically involves a function call from the R package that you're using, where you pass in the credentials as parameters.

## Connect to a database

```{r}
library(connections)
library(RSQLite)
#con <- dbConnect(RSQLite::SQLite(), dbname = "mimic_database.sqlite")
con <- connection_open(RSQLite::SQLite(), "mimic_database.sqlite")
```

```{r}
library(DBI)
dbListTables(con@con)
```

## exercise
Check out connections tab

## Data Dictionary

Structure of this database

## Simple sql

```{r}
labs_df <- dbGetQuery(con,"SELECT * FROM LABEVENTS LIMIT 5")

labs_df |>
  filter(row_id == 6244564)
```

## Joins

```{r}
labs_df <- dbGetQuery(con,"SELECT * FROM LABEVENTS")

labs_df
```

```{r}
labs_itms_df <- dbGetQuery(con,"SELECT * FROM D_LABITEMS")
```

```{r}
labs_df |>
  count(row_id) |>
  filter(n > 1)

labs_df |>
  count(subject_id,charttime,itemid) |>
  filter(n >1)

```

```{r}
labs_df |>
  inner_join(labs_itms_df, join_by(itemid))
```

```{r}
labs_full_df <- dbGetQuery(con,"
                           SELECT * 
                           FROM LABEVENTS
                           INNER JOIN D_LABITEMS on D_LABITEMS.itemid = LABEVENTS.itemid")
                           ")
```

```{r}

```

